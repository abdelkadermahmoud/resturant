@model RestaurantRater.Models.Restaurant
@{
    ViewBag.Title = "Create";
}

<h2>Add a Resturant</h2>
<!-- this renders a form that will be handled by a controller action method -->
@using (Html.BeginForm())
{

	<!-- this makes a hidden form field that is validated when the form is submitted-->
	@Html.AntiForgeryToken()

	<div class="form-horizontal">
		<h4>Restaurant</h4>
		<hr/>
<!--This is returns an ul if the info is good, we pass it the info due to "", then it assigns the text we give it to a new class with danger text -->
		@Html.ValidationSummary(true, "", new { @class = "text-danger" })
		<div class="form-group">
			@Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
			<div class="col-md-10">
				<!--Razor Syntax for creating a form-->
				@Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
				@Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
			</div>
		</div>
	
		<div class="form-group">
			@Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "control-label col-md-2" })
			<div class="col-md-10">
				@Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control" } })
				@Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
			</div>
		</div>

		<div class="form-group">
			@Html.LabelFor(model => model.Rating, htmlAttributes: new { @class = "control-label col-md-2" })
			<div class="col-md-10">
				@Html.EditorFor(model => model.Rating, new { htmlAttributes = new { @class = "form-control" } })
				@Html.ValidationMessageFor(model => model.Rating, "", new { @class = "text-danger" })
			</div>
		</div>
		
		<div class="form-group">
			<div class="col-md-offset-2 col-md-10">
				<input type="submit" value="Add" class="btn btn-success" />
			</div>
		</div>	
	






	
	</div>
}
